<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fc772932-3e02-4f12-a143-fdbb2afa037b" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/model/Account.scala" beforeDir="false" afterPath="$PROJECT_DIR$/app/model/Account.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/model/wallets/WalletCommands.scala" beforeDir="false" afterPath="$PROJECT_DIR$/app/model/wallets/WalletCommands.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/model/wallets/state/CreatedWalletState.scala" beforeDir="false" afterPath="$PROJECT_DIR$/app/model/wallets/state/CreatedWalletState.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/rest/wallets/WalletResource.scala" beforeDir="false" afterPath="$PROJECT_DIR$/app/rest/wallets/WalletResource.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/rest/wallets/WalletRouter.scala" beforeDir="false" afterPath="$PROJECT_DIR$/app/rest/wallets/WalletRouter.scala" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/rest/wallets/WalletResourceSpec.scala" beforeDir="false" afterPath="$PROJECT_DIR$/test/rest/wallets/WalletResourceSpec.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitToolBoxStore">
    <option name="projectConfigVersion" value="2" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectId" id="1kvxSM1RO97I7iCH3bBXSNn72Yh" />
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="scala_project_settings_configurable.last_selected_tab_index" value="0" />
    <property name="settings.editor.selected.configurable" value="org.jetbrains.plugins.scala.settings.ScalaProjectSettingsConfigurable" />
  </component>
  <component name="RunManager" selected="ScalaTest.WalletResourceSpec.get an account from wallet">
    <configuration name="WalletResourceSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="ganbaru-wallet-service" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <set />
      </option>
      <option name="testKind" value="Class" />
      <option name="testClassPath" value="rest.wallets.WalletResourceSpec" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WalletResourceSpec.add an account to a wallet " type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="ganbaru-wallet-service" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <set />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="rest.wallets.WalletResourceSpec" />
      <option name="testName" value="add an account to a wallet " />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WalletResourceSpec.confirm a wallet" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="ganbaru-wallet-service" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <set />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="rest.wallets.WalletResourceSpec" />
      <option name="testName" value="confirm a wallet" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WalletResourceSpec.get a wallet" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="services-orders-scala" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <set />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="rest.wallets.WalletResourceSpec" />
      <option name="testName" value="get a wallet" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="WalletResourceSpec.get an account from wallet" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="ganbaru-wallet-service" />
      <option name="allowRunningInParallel" value="false" />
      <option name="selectedOptions">
        <set />
      </option>
      <option name="testKind" value="Test name" />
      <option name="testClassPath" value="rest.wallets.WalletResourceSpec" />
      <option name="testName" value="get an account from wallet" />
      <option name="workingDirectory" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.WalletResourceSpec.get an account from wallet" />
        <item itemvalue="ScalaTest.WalletResourceSpec" />
        <item itemvalue="ScalaTest.WalletResourceSpec.add an account to a wallet " />
        <item itemvalue="ScalaTest.WalletResourceSpec.confirm a wallet" />
        <item itemvalue="ScalaTest.WalletResourceSpec.get a wallet" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fc772932-3e02-4f12-a143-fdbb2afa037b" name="Default Changelist" comment="" />
      <created>1606594869036</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1606594869036</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="WindowStateProjectService">
    <state x="2138" y="313" key="#com.intellij.codeInsight.editorActions.RestoreReferencesDialog" timestamp="1606595869803">
      <screen x="1440" y="0" width="1920" height="1080" />
    </state>
    <state x="2138" y="313" key="#com.intellij.codeInsight.editorActions.RestoreReferencesDialog/0.0.1440.900/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606595869803" />
    <state x="2154" y="345" key="#com.intellij.fileTypes.FileTypeChooser" timestamp="1606600224280">
      <screen x="1440" y="0" width="1920" height="1080" />
    </state>
    <state x="2154" y="345" key="#com.intellij.fileTypes.FileTypeChooser/0.0.1440.900/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606600224280" />
    <state width="1878" height="84" key="GridCell.Tab.0.bottom" timestamp="1606611028562">
      <screen x="1440" y="0" width="1920" height="1080" />
    </state>
    <state width="1878" height="84" key="GridCell.Tab.0.bottom/0.0.1440.900/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606611028562" />
    <state width="1398" height="471" key="GridCell.Tab.0.bottom/0.0.1440.900@0.0.1440.900" timestamp="1606604889809" />
    <state width="1878" height="300" key="GridCell.Tab.0.bottom/0.23.1440.877/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606600763182" />
    <state width="1878" height="84" key="GridCell.Tab.0.center" timestamp="1606611028558">
      <screen x="1440" y="0" width="1920" height="1080" />
    </state>
    <state width="1878" height="84" key="GridCell.Tab.0.center/0.0.1440.900/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606611028558" />
    <state width="1398" height="471" key="GridCell.Tab.0.center/0.0.1440.900@0.0.1440.900" timestamp="1606604889806" />
    <state width="1878" height="300" key="GridCell.Tab.0.center/0.23.1440.877/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606600763179" />
    <state width="1878" height="84" key="GridCell.Tab.0.left" timestamp="1606611028557">
      <screen x="1440" y="0" width="1920" height="1080" />
    </state>
    <state width="1878" height="84" key="GridCell.Tab.0.left/0.0.1440.900/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606611028557" />
    <state width="1398" height="471" key="GridCell.Tab.0.left/0.0.1440.900@0.0.1440.900" timestamp="1606604889805" />
    <state width="1878" height="300" key="GridCell.Tab.0.left/0.23.1440.877/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606600763177" />
    <state width="1878" height="84" key="GridCell.Tab.0.right" timestamp="1606611028560">
      <screen x="1440" y="0" width="1920" height="1080" />
    </state>
    <state width="1878" height="84" key="GridCell.Tab.0.right/0.0.1440.900/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606611028560" />
    <state width="1398" height="471" key="GridCell.Tab.0.right/0.0.1440.900@0.0.1440.900" timestamp="1606604889807" />
    <state width="1878" height="300" key="GridCell.Tab.0.right/0.23.1440.877/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606600763180" />
    <state x="2108" y="279" width="584" height="522" key="find.popup" timestamp="1606606274606">
      <screen x="1440" y="0" width="1920" height="1080" />
    </state>
    <state x="2108" y="279" width="584" height="522" key="find.popup/0.0.1440.900/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606606274606" />
    <state x="501" y="233" width="574" height="522" key="find.popup/0.0.1440.900@0.0.1440.900" timestamp="1606602445704" />
    <state x="2108" y="279" width="584" height="522" key="find.popup/0.23.1440.877/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606600423031" />
    <state x="2065" y="241" width="670" height="676" key="search.everywhere.popup" timestamp="1606609077296">
      <screen x="1440" y="0" width="1920" height="1080" />
    </state>
    <state x="2065" y="241" width="670" height="676" key="search.everywhere.popup/0.0.1440.900/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606608742335" />
    <state x="469" y="201" width="670" height="564" key="search.everywhere.popup/0.0.1440.900@0.0.1440.900" timestamp="1606604897010" />
    <state x="2065" y="241" width="670" height="676" key="search.everywhere.popup/0.23.1440.877/1440.0.1920.1080@1440.0.1920.1080" timestamp="1606609077296" />
  </component>
</project>