[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 103 products, 27 sources, 20 libraries[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/app/model/WalletAggregate.scala, ${BASE}/app/persistence/EventAdaptersAware.scala, ${BASE}/app/model/Money.scala, ${BASE}/app/sharding/ShardingFactory.scala, ${BASE}/app/play/Module.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/model/Account.scala, ${BASE}/app/play/ErrorHandler.scala, ${BASE}/app/model/util/Acknowledge.scala, ${BASE}/app/persistence/EventAdapters.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/Transaction.scala, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/app/rest/package.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/WalletFactorySharding.scala, ${BASE}/app/sharding/EntityProvider.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala, ${BASE}/app/model/wallets/state/WalletState.scala, ${BASE}/app/model/settings/GandaruServiceSettingsSharding.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala), unmodified = ...),Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class),Set(),API Changes: Set())[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(${BASE}/target/scala-2.13/classes/rest/wallets/WalletRouter$$anonfun$routes$1.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$.class, ${BASE}/target/scala-2.13/classes/model/WalletFactory$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet.class, ${BASE}/target/scala-2.13/classes/model/wallets/CreatedWallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber$.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/CreatedWalletState$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated$.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletCommands$CreateWalletWithNumber$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute$.class, ${BASE}/target/scala-2.13/classes/model/wallets/Wallet$.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletNumber.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletSharding.class, ${BASE}/target/scala-2.13/classes/model/wallets/state/EmptyWalletState$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AddAttribute.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletId.class, ${BASE}/target/scala-2.13/classes/model/wallets/WalletEvents$WalletCreated.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings.class, ${BASE}/target/scala-2.13/classes/rest/wallets/WalletResource$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated$.class, ${BASE}/target/scala-2.13/classes/model/settings/GandaruServiceSettings$AttributeAddedOrUpdated.class)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/app/model/settings/GandaruServiceSettings.scala, ${BASE}/app/model/WalletFactory.scala, ${BASE}/app/rest/wallets/WalletRouter.scala, ${BASE}/app/rest/wallets/WalletResource.scala, ${BASE}/app/model/wallets/WalletCommands.scala, ${BASE}/app/model/wallets/state/CreatedWalletState.scala, ${BASE}/app/model/wallets/state/EmptyWalletState.scala, ${BASE}/app/model/wallets/Wallet.scala, ${BASE}/app/model/wallets/WalletSharding.scala, ${BASE}/app/model/wallets/WalletEvents.scala)[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: model.settings.GandaruServiceSettings, model.settings.GandaruServiceSettings.Command, model.WalletFactory.WalletCreated, model.wallets.WalletId, model.settings.GandaruServiceSettings.AttributeAddedOrUpdated, model.WalletFactory.WalletNumberState, model.WalletFactory.ConfirmWallet, model.wallets.state.CreatedWalletState, rest.wallets.WalletResource, model.wallets.GandaruClientId, model.wallets.WalletSharding, model.wallets.CreatedWallet, model.WalletFactory.Event, model.WalletFactory, rest.wallets.WalletResource.WalletConfirmationPost, rest.wallets.WalletResource.TestPost, model.wallets.Wallet.WalletConfirmation, model.wallets.WalletNumber, model.wallets.Wallet, model.settings.GandaruServiceSettings.Event, model.WalletFactory.Command, model.wallets.state.EmptyWalletState, model.settings.GandaruServiceSettings.AddAttribute[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mIncluding model.settings.GandaruServiceSettings.AddAttribute by model.settings.GandaruServiceSettings.Command[0m[0J
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m[0J
